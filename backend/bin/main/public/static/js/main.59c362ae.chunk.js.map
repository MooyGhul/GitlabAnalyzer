{"version":3,"sources":["ProjectInfoPage/WideHeader/ProjectTitle.module.css","ProjectInfoPage/WideHeader/WideHeader.module.css","ProjectInfoPage/ProjectOverview/ProjectOverview.module.css","mockDataDir/mockAdminUser.js","mockDataDir/mockToken.js","components/Header.js","ProjectInfoPage/WideHeader/ProjectTitle.js","ProjectInfoPage/WideHeader/WideHeader.js","ProjectInfoPage/ProjectOverview/MemberList.js","ProjectInfoPage/ProjectOverview/ProjectOverview.js","ProjectInfoPage/ProjectInfoPage.js","components/UrlToken.js","components/Login.js","reportWebVitals.js","index.js","style/Login.module.css","style/header.module.css"],"names":["module","exports","AdminUser","Token","Header","props","className","styles","header","pageTitle","ProjectTitle","projectTitle","projectID","WideHeader","body","useStyles","makeStyles","memberList","position","top","right","width","height","MemberList","useState","hits","data","setData","useEffect","a","axios","result","fetchData","map","item","href","url","title","objectID","ProjectOverview","ProjectInfoPage","urlString","UrlToken","token","urlToken","setUrlToken","errorMsg","setErrorMsg","onSubmit","event","preventDefault","console","log","ReactDOM","render","StrictMode","document","getElementById","type","value","onChange","e","target","Login","name","password","user","setUser","form","login","label","button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.59c362ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectTitle\":\"ProjectTitle_projectTitle__edayn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"WideHeader_body__fSkcr\",\"projectTitle\":\"WideHeader_projectTitle__38EMc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProjectOverview\":\"ProjectOverview_ProjectOverview__1-HuJ\"};","export const AdminUser = {\r\n    username : 'admin',\r\n    password : '1234',\r\n};","export const Token = {\r\n    token : '1234',\r\n};","import React from 'react'; \r\n\r\nimport styles from \"../style/header.module.css\"\r\n\r\nconst Header = (props) => {\r\n    return <h1 className={styles.header}>{props.pageTitle}</h1>\r\n}\r\n\r\nexport default Header;","import React from 'react'; \r\n import styles from './ProjectTitle.module.css'\r\n\r\nconst ProjectTitle = (props) => {\r\n\r\n    return (\r\n    <div className={styles.projectTitle}>\r\n        <h1>{props.projectTitle}</h1>\r\n        <h3>Project ID: {props.projectID}</h3>\r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default ProjectTitle;","import React from 'react';  \r\nimport ProjectTitle from './ProjectTitle';\r\nimport styles from \"./WideHeader.module.css\"\r\n\r\nfunction WideHeader() {\r\n  \r\n  return(\r\n      \r\n      <div className={styles.body}>      \r\n      \r\n        <ProjectTitle  \r\n          projectTitle=\"Sudoku Solver\"\r\n          projectID=\"1234\"\r\n        />     \r\n      </div>  \r\n    );\r\n}\r\n\r\nexport default WideHeader;","import { DataGrid } from '@material-ui/data-grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'ID', width: 100},\r\n  { field: 'studentID', headerName: 'Student ID', width: 200},\r\n];\r\n\r\nconst rows = [\r\n  {id: 1, studentID: 'katelynk'},\r\n  {id: 2, studentID: 'katelynk'},\r\n  {id: 3, studentID: 'katelynk'},\r\n  {id: 4, studentID: 'katelynk'},\r\n  {id: 5, studentID: 'katelynk'},\r\n  {id: 6, studentID: 'katelynk'},\r\n  {id: 7, studentID: 'katelynk'},\r\n  {id: 8, studentID: 'katelynk'},\r\n]\r\n\r\nconst useStyles = makeStyles({\r\n  memberList:{ \r\n    position: 'absolute',\r\n    top: 100,\r\n    right: '10%',\r\n    width: '30%',\r\n    height: 400,\r\n  }\r\n})\r\n\r\n\r\nfunction MemberList(props) {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState ({ hits: []});\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(\r\n        'https://hn.algolia.com/api/v1/search?query=redux'\r\n\r\n      );\r\n      setData(result.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n     <div>\r\n       <ul>\r\n      {data.hits.map(item => (\r\n        <li key={item.objectID}>\r\n          <a href={item.url}>{item.title}</a>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n     </div>\r\n      // <div className={classes.memberList}>        \r\n      //   <h3>Please select a student from the member list below.</h3>\r\n      //   <DataGrid rows={rows} columns={columns} pageSize={5} />\r\n      //   <Button variant=\"contained\">Analyze</Button>\r\n      // </div>\r\n    );\r\n  }\r\n  \r\n  export default MemberList;","import styles from './ProjectOverview.module.css'\r\nimport MemberList from './MemberList'\r\n\r\n\r\nfunction ProjectOverview(){\r\n    return(\r\n        <div className={styles.ProjectOverview}>\r\n            <MemberList/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectOverview","import React from 'react';\r\nimport Header from '../components/Header'; \r\nimport WideHeader from './WideHeader/WideHeader';\r\nimport ProjectOverview from './ProjectOverview/ProjectOverview';\r\n\r\nfunction ProjectInfoPage(props) {\r\n \r\n    return (\r\n      <div>\r\n        <WideHeader/>\r\n\r\n        <Header\r\n          pageTitle=\"Project Information\"\r\n        />\r\n\r\n        <ProjectOverview/>     \r\n           \r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default ProjectInfoPage;","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import App from '../App';\r\nimport { Token } from '../mockDataDir/mockToken' \r\nimport ProjectInfoPage from '../ProjectInfoPage/ProjectInfoPage' \r\n\r\n// Note: Use token from mockToken\r\nconst urlString = 'https://csil-git1.cs.surrey.sfu.ca';\r\n\r\nfunction UrlToken() {\r\n    const [urlToken, setUrlToken] = useState({url: urlString, token:''});\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n\r\n    const nextHandler = event => {\r\n        event.preventDefault();\r\n        console.log({urlToken});\r\n\r\n        if(urlToken.token === Token.token) {\r\n            ReactDOM.render(\r\n                <React.StrictMode>\r\n                    <ProjectInfoPage />\r\n                </React.StrictMode>,\r\n                document.getElementById('root')\r\n            );\r\n        } else {\r\n            setUrlToken({url: urlString, token:''});\r\n            setErrorMsg('Url or token is incorrect. Try Again.');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit={nextHandler}>\r\n                <h3>{errorMsg}</h3>\r\n                <label>\r\n                    Enter GitLab Server URL\r\n                    <input type ='url' value={urlToken.url}\r\n                        onChange={e=> setUrlToken({...urlToken, url: e.target.value})} />\r\n                </label>\r\n                <label>\r\n                    Enter Token\r\n                    <input type ='text' value={urlToken.token}\r\n                        onChange={e=> setUrlToken({...urlToken, token: e.target.value})} />\r\n                </label>\r\n                <button type ='submit'>\r\n                    Next\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UrlToken;","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { AdminUser } from '../mockDataDir/mockAdminUser';\r\nimport UrlToken from './UrlToken';\r\nimport styles from '../style/Login.module.css';\r\n\r\n//Note: Use AdminUser's username and password from mockInfo to login\r\n\r\nfunction Login() {\r\n    const [user, setUser] = useState({name:'', password:''});\r\n\r\n    const login = user => {\r\n        console.log({user});\r\n\r\n        if(user.name === AdminUser.username && user.password === AdminUser.password) {\r\n            ReactDOM.render(\r\n            <React.StrictMode>\r\n                <UrlToken />\r\n              </React.StrictMode>,\r\n              document.getElementById('root')\r\n            );\r\n        } else {\r\n            setUser({name:'', password: ''});\r\n        }\r\n    }\r\n\r\n    const loginHandler = event => {\r\n        event.preventDefault();\r\n        login(user);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h2> Login </h2>\r\n            <form className={styles.form} onSubmit={loginHandler}>\r\n                <label className={styles.label}>\r\n                    Username\r\n                    <input type ='text' value={user.name} onChange={e=> setUser({...user, name: e.target.value})} />\r\n                </label>\r\n                <label className={styles.label}>\r\n                    Password\r\n                    <input type ='password' value={user.password} onChange={e=> setUser({...user, password: e.target.value})} />\r\n                </label>\r\n                    <button className={styles.button} type ='submit'>\r\n                        Login\r\n                    </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Login from './components/Login';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Login />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Login_button__3Dks0\",\"form\":\"Login_form__wTNeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2CMtK\"};"],"sourceRoot":""}